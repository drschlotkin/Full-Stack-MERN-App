{"version":3,"sources":["Components/Context/index.js","Components/Header.js","Components/Courses.js","Components/CreateCourse.js","Components/CourseDetail.js","Components/UpdateCourse.js","Components/UserSignIn.js","Components/UserSignUp.js","Components/UserSignOut.js","Components/Errors/PageNotFound.js","Components/Errors/ErrorRoute.js","Components/Errors/Forbidden.js","Components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","_action$payload","payload","firstName","lastName","emailAddress","password","ID","signedIn","type","Provider","confirmPassword","errors","dispatch","_this","setState","componentDidMount","localStorage","getItem","_JSON$parse","JSON","parse","signOut","clear","props","history","push","cancelSignOut","signIn","user","prevUser","axios","get","auth","username","then","res","_res$data","data","location","concat","setItem","stringify","catch","err","response","status","react_default","a","createElement","AuthContext","value","this","actions","children","Component","withRouter","React","createContext","Consumer","Header","className","react_router_dom","to","_ref","Fragment","Courses","courses","_this2","window","pathname","map","course","key","_id","title","version","xmlns","x","y","viewBox","points","CreateCourse","description","estimatedTime","materialsNeeded","validation","event","preventDefault","_this$state","length","createCourse","_this$state2","method","url","stateData","Object","defineProperty","target","name","cancel","keys","i","onSubmit","bind","id","placeholder","onChange","onClick","CourseDetail","userID","deleteCourse","delete","match","params","_this3","_this$state$course","react_markdown_default","UpdateCourse","context","updateCourse","cancelUpdate","handleChange","_this$state3","contextType","emailRegex","RegExp","UserSignIn","e","test","UserSignUp","signup","post","isSignedIn","UserSignOut","PageNotFound","UnhandledError","Forbidden","PrivateRoute","component","rest","objectWithoutProperties","objectSpread","courseID","slice","useContext","localUser","newPath","react_router","assign","render","App","Context","Components_Header","exact","path","Components_PrivateRoute","ErrorRoute","Boolean","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb0150b3.chunk.js","sourcesContent":["/* CONTEXT API COMPONENT\r\n========================\r\n(1) This component is used for managing global state of signed in user\r\n(2) Made available throughout application using <Consumer> components. */\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\n// Reducer to apply user data to global state\r\nconst reducer = (state, action) => { \r\n  const { firstName, lastName, emailAddress, password, ID, signedIn } = action.payload;\r\n  switch (action.type) {\r\n    case 'SIGN_IN':\r\n      return { firstName, lastName, emailAddress, password, ID, signedIn };\r\n    default:\r\n      return state;\r\n  }; \r\n};\r\n\r\n\r\nclass Provider extends Component {\r\n\r\n  // Set initial state \r\n  state = {\r\n    firstName: '',\r\n    lastName:'',\r\n    emailAddress: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    signedIn: null,\r\n    ID: '',\r\n    errors: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  \r\n\r\n  // Use localStorage to keep user in state when page reloads\r\n  componentDidMount = () => {\r\n    if(localStorage.getItem('user')){\r\n      const { ID, firstName, lastName, emailAddress, signedIn, password } = JSON.parse(localStorage.getItem('user'));\r\n      this.setState({ ID, firstName, lastName, emailAddress, signedIn, password }); \r\n    };\r\n  };\r\n \r\n\r\n  // Clear state if user logs out\r\n  signOut = () => {\r\n    this.setState({\r\n      ID: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      emailAddress: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      signedIn: false\r\n    });\r\n    localStorage.clear()\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  \r\n  // Redirect to main page if signOut is cancelled\r\n  cancelSignOut = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n\r\n   /* USER SIGN IN (GET ROUTE)\r\n   ===========================\r\n   (1) Save logged in user to state and to local storage. \r\n   (2) Redirect back to previous page\r\n   (3) Redirect to course listings if a user is already signedIn with boolean: prevUser)*/\r\n  \r\n  signIn = (user) => {\r\n    const history = this.props.history;\r\n    let prevUser = false;\r\n    const { emailAddress, password } = user;\r\n    axios.get('api/users', {\r\n      auth: { username: emailAddress, password }\r\n      }).then(res => {\r\n        const { ID, firstName, lastName, emailAddress } = res.data;\r\n        if (this.state.signedIn) prevUser = true;\r\n        this.setState({ ID, firstName, lastName, emailAddress, password, signedIn: true });\r\n        if(localStorage.getItem('location') && !prevUser){\r\n          const location = JSON.parse(localStorage.getItem('location'));\r\n          history.push(`${location}`);\r\n        }else{\r\n          history.push('/');\r\n        }\r\n        localStorage.clear();\r\n        localStorage.setItem('user', JSON.stringify(this.state));  \r\n      }).catch(err => {\r\n        if (err.response.status === 401){\r\n          let errors = [];\r\n          errors.push('Incorrect username and/or password');\r\n          this.setState({ errors });\r\n        }else{\r\n          history.push('/error');\r\n        } \r\n    });\r\n  };\r\n\r\n\r\n  // Provide state and actions to forms\r\n  render(){\r\n    return (\r\n\r\n      <AuthContext.Provider value = {{\r\n        user: this.state,\r\n        actions: {\r\n          signIn: this.signIn,\r\n          signOut: this.signOut,\r\n          cancelSignOut: this.cancelSignOut,\r\n        }\r\n      }}>\r\n        {this.props.children}\r\n      </AuthContext.Provider>\r\n\r\n    );\r\n  };\r\n};\r\n\r\nexport default withRouter(Provider);\r\nexport const AuthContext = React.createContext();\r\nexport const Consumer = AuthContext.Consumer;","/* HEADER COMPONENT\r\n===================\r\n(1) Visible on every page\r\n(2) Shows currently signed in user and includes buttons for signing in and signing out */\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Consumer } from './Context';\r\n\r\nconst Header = () => {\r\n  \r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"bounds\">\r\n          <NavLink to='/' className=\"header--logo\">Courses</NavLink>\r\n\r\n          <Consumer>\r\n            {({user}) => {\r\n              return(\r\n                <nav>\r\n                  {user.signedIn ? \r\n                    <React.Fragment>\r\n                      <span>Welcome {user.firstName} {user.lastName}</span>\r\n                      <NavLink to=\"/signout\" className=\"signout\">Sign Out</NavLink>\r\n                    </React.Fragment>\r\n                  :\r\n                    <React.Fragment>\r\n                      <NavLink to='/signup' className=\"signup\">Sign Up</NavLink>\r\n                      <NavLink to='/signin' className=\"signin\">Sign In</NavLink>\r\n                    </React.Fragment>\r\n                  }\r\n                </nav>\r\n              )\r\n            }}\r\n          </Consumer>\r\n\r\n        </div>\r\n      <hr />\r\n      </div>\r\n    )\r\n  };\r\n\r\nexport default Header;\r\n\r\n ","/* COURSES COMPONENT (Main Page)\r\n================================\r\n(1) Render list of courses from database\r\n(2) User can create courses and update/delete only if they're logged in */\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class Courses extends Component {\r\n  \r\n  state = {\r\n    courses: []\r\n  };\r\n  \r\n\r\n  componentDidMount(){\r\n    localStorage.setItem('location', JSON.stringify(window.location.pathname));\r\n    const history = this.props.history;\r\n    axios.get(`api/courses`)\r\n      .then(res => {\r\n        this.setState({ courses: res.data });\r\n      }).catch(err => {\r\n        if (err) history.push('/error')\r\n      });\r\n  };\r\n\r\n\r\n  /* RENDER ELEMENTS TO DOM\r\n  ========================= */\r\n  render(){\r\n    return (\r\n      <div className=\"bounds\">\r\n      \r\n        {this.state.courses.map(course =>\r\n          <div className=\"grid-33\" key={course._id}>\r\n            <NavLink to={`/courses/${course._id}`} className=\"course--module course--link\">\r\n              <h4 className=\"course--label\">Course</h4>\r\n              <h3 className=\"course--title\">{course.title}</h3>\r\n            </NavLink>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"grid-33\">\r\n          <NavLink to='/courses/create' className=\"course--module course--add--module\">\r\n            <h3 className=\"course--add--title\">\r\n              <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 13 13\" className=\"add\">\r\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\r\n              </svg>\r\n              New Course      \r\n            </h3>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n","/* CREATE COURSE FORM\r\n=====================\r\nOnly available if user is logged in */\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { Consumer } from './Context';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateCourse extends Component {\r\n\r\n  state = {\r\n    title: '',\r\n    description: '',\r\n    estimatedTime: '',\r\n    materialsNeeded: '',\r\n    errors: []\r\n  };\r\n\r\n\r\n  /* CREATE COURSE VALIDATION\r\n  ==========================\r\n  Validate all inputs before proceeding to POST route*/\r\n\r\n  validation = (user, event) => {\r\n    event.preventDefault();\r\n    let errors = [];\r\n    let {title, description} = this.state;\r\n    title.length === 0 && errors.push('Please enter a title for your course');\r\n    description.length === 0 && errors.push('Please enter a description for your course');\r\n    this.setState({ errors });\r\n    errors.length === 0 && this.createCourse(user);\r\n  };\r\n\r\n\r\n /* COURSE POST ROUTE\r\n  ==================\r\n  Save course and the associated user information to database  */\r\n\r\n  createCourse = (user) => {\r\n    const { title, description, estimatedTime, materialsNeeded } = this.state\r\n    const history = this.props.history\r\n    axios({\r\n      method: 'post',\r\n      auth: {\r\n        username: user.emailAddress,\r\n        password: user.password\r\n      },\r\n      url: `api/courses`,\r\n      data: { title, description, estimatedTime, materialsNeeded }\r\n      }).then(() => {\r\n        history.push('/courses');\r\n      }).catch(err => {\r\n        if (err) history.push('/error')\r\n    });\r\n  };\r\n\r\n\r\n  // Assign each state value from input fields\r\n  stateData = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n\r\n  // Cancel form event\r\n  cancel = (event) => {\r\n    event.preventDefault();\r\n    this.props.history.push(\"/\");\r\n  };\r\n  \r\n\r\n  /* RENDER ELEMENTS TO DOM\r\n  ========================= */\r\n  render(){\r\n    const { errors } = this.state\r\n    return (\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Create Course</h1>\r\n\r\n        <Consumer>\r\n          {({user}) => {\r\n            return(\r\n              <React.Fragment>\r\n                {errors.length > 0 ?    \r\n                  <div>\r\n                    <h2 className=\"validation--errors--label\">Error!</h2>\r\n                      <div className=\"validation-errors\">\r\n                        <ul>\r\n                          {Object.keys(errors).map((key, i) => {\r\n                            return (\r\n                              <li key={key}>{errors[i]}</li>\r\n                            )\r\n                          })}\r\n                        </ul>\r\n                      </div>\r\n                  </div>\r\n                : null\r\n                }\r\n\r\n                <form onSubmit = {this.validation.bind(this, user)}>\r\n                  <div className=\"grid-66\">\r\n                    <div className=\"course--header\">\r\n                      <h4 className=\"course--label\">Course</h4>\r\n                      <div>\r\n                        <input id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" placeholder=\"Course title...\" onChange={this.stateData}/>\r\n                      </div>\r\n                      <p>By {user.firstName} {user.lastName}</p>\r\n                    </div>\r\n                    <div className=\"course--description\">\r\n                      <div>\r\n                        <textarea id=\"description\" name=\"description\" className=\"\" placeholder=\"Course description...\" onChange={this.stateData}></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid-25 grid-right\">\r\n                    <div className=\"course--stats\">\r\n                      <ul className=\"course--stats--list\">\r\n                        <li className=\"course--stats--list--item\">\r\n                          <h4>Estimated Time</h4>\r\n                          <div>\r\n                            <input id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\"\r\n                              placeholder=\"Hours\" onChange={this.stateData}/>\r\n                          </div>\r\n                        </li>\r\n                        <li className=\"course--stats--list--item\">\r\n                          <h4>Materials Needed</h4>\r\n                          <div>\r\n                            <textarea id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" placeholder=\"List materials...\" onChange={this.stateData}></textarea>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid-100 pad-bottom\">\r\n                    <button className=\"button\" type=\"submit\">Create Course</button>\r\n                    <button className=\"button button-secondary\" onClick={this.cancel}>Cancel</button>\r\n                  </div>\r\n                </form>\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Consumer>\r\n        \r\n      </div> \r\n    );\r\n  };\r\n};\r\n\r\n\r\n\r\n","/* COURSE DETAIL COMPONENT\r\n==========================\r\n(1) Show selected course details\r\n(2) Update and Delete are only available to authorized user(s) */\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Consumer } from './Context';\r\n\r\n\r\nexport default class CourseDetail extends Component {\r\n  \r\n  state = {\r\n    course: '',\r\n    user: '',\r\n    userID: ''\r\n  };\r\n\r\n  \r\n  componentDidMount(){\r\n    localStorage.setItem('location', JSON.stringify(window.location.pathname))\r\n    const history = this.props.history \r\n    axios.get(`api/courses/${this.props.match.params.id}`)\r\n      .then(res => {\r\n    \r\n        this.setState({\r\n          course: res.data,\r\n          user: res.data.user,\r\n          userID: res.data.user._id\r\n        });\r\n      }).catch(err => {\r\n        if (err) history.push('/notfound')\r\n      });\r\n  };\r\n\r\n\r\n  deleteCourse = (user) => {\r\n    const history = this.props.history\r\n    axios.delete(`/${window.location.pathname}`, {\r\n      auth: {\r\n        username: user.emailAddress,\r\n        password: user.password\r\n      }\r\n    }).then(() => {\r\n      history.push('/courses');\r\n    }).catch(err => {\r\n      if (err) history.push('/error')\r\n    });\r\n  };\r\n\r\n\r\n  /* RENDER ELEMENTS TO DOM\r\n  ========================= */\r\n  render(){\r\n    const { _id, title, description, materialsNeeded, estimatedTime } = this.state.course\r\n    const { userID, user } = this.state\r\n    return (\r\n      <div>\r\n        <div className=\"actions--bar\">\r\n          <div className=\"bounds\">\r\n            <div className=\"grid-100\">\r\n           \r\n              <Consumer>\r\n                {({user}) => {\r\n                  return (\r\n                    <span>    \r\n                      {user.signedIn && user.ID === userID ?\r\n                        <React.Fragment>\r\n                          <NavLink to={`/courses/${_id}/update`} className=\"button\">Update Course</NavLink>\r\n                          <button className=\"button\" onClick={() => this.deleteCourse(user)} >Delete Course</button>\r\n                        </React.Fragment>\r\n                      : null\r\n                      }\r\n                    </span>\r\n                  )\r\n                }}\r\n              </Consumer>\r\n\r\n              <NavLink to='/' className=\"button button-secondary\">Return to List</NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bounds course--detail\">\r\n          <div className=\"grid-66\">\r\n            <div className=\"course--header\">\r\n              <h4 className=\"course--label\">Course</h4>\r\n              <h3 className=\"course--title\">{title}</h3>\r\n              <p>By {user.firstName} {user.lastName}</p>\r\n            </div>\r\n            <div className=\"course--description\">\r\n              <ReactMarkdown>{description}</ReactMarkdown> \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid-25 grid-right\">\r\n            <div className=\"course--stats\">\r\n              <ul className=\"course--stats--list\">\r\n                <li className=\"course--stats--list--item\">\r\n                  <h4>Estimated Time</h4>\r\n                  <h3>{estimatedTime}</h3>\r\n                </li>\r\n                <li className=\"course--stats--list--item\">\r\n                  <h4>Materials Needed</h4>\r\n                  <ReactMarkdown>{materialsNeeded}</ReactMarkdown>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};","/* UPDATE COURSE COMPONENT\r\n==========================\r\n(1) Only available if user is authenticated \r\n(2) Display course details\r\n(3) Show validation errors if necessary before updating to database */\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Consumer } from './Context';\r\nimport {AuthContext} from './Context/index';\r\n\r\n\r\nclass UpdateCourse extends Component {\r\n  \r\n  state = {\r\n    user: [],\r\n    title: '',\r\n    description: '',\r\n    estimatedTime: '',\r\n    materialsNeeded: '',\r\n    errors: []\r\n  };\r\n\r\n\r\n  componentDidMount = () => {\r\n    const history = this.props.history\r\n    axios.get(`courses/${this.props.match.params.id}`)\r\n      .then(res => {\r\n        const { user, title, description, estimatedTime, materialsNeeded } = res.data;\r\n        if(user._id !== this.context.user.ID) return history.push('/forbidden');\r\n        this.setState({ user, title, description, estimatedTime, materialsNeeded });\r\n      }).catch(err => {\r\n        if (err) history.push('/error')\r\n    });\r\n  };\r\n\r\n \r\n   /* UPDATE COURSE VALIDATION\r\n  ============================\r\n  Validate all inputs before proceeding to PUT route*/\r\n\r\n  validation = (user, event) => {\r\n    event.preventDefault();\r\n    let errors = [];\r\n    let { title, description } = this.state;\r\n    title.length === 0 && errors.push('Please enter a title for your course');  \r\n    description.length === 0 && errors.push('Please enter a description for your course');\r\n    this.setState({ errors });\r\n    errors.length === 0 && this.updateCourse(user);\r\n  };\r\n\r\n\r\n /* COURSE PUT ROUTE\r\n  ==================\r\n  Update course */\r\n\r\n  updateCourse = (user) => {\r\n    const { title, description, estimatedTime, materialsNeeded } = this.state;\r\n    const { emailAddress, password } = user;\r\n    const history = this.props.history\r\n    const url = this.props.match.params.id;\r\n    axios({\r\n      method: 'put',\r\n      auth: { username: emailAddress, password },\r\n      url: `api/courses/${url}`,\r\n      data: { title, description, estimatedTime, materialsNeeded }\r\n      }).then(() => {\r\n        history.push(`/courses/${url}`);\r\n      }).catch(err => {\r\n        if (err) history.push('/error')\r\n    }); \r\n  };\r\n\r\n\r\n  // Cancel form event\r\n  cancelUpdate = (event) => {\r\n    event.preventDefault();\r\n    this.props.history.push(`/courses/${this.props.match.params.id}`);\r\n  };\r\n\r\n\r\n  // Assign each state value from input fields\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n\r\n  /* RENDER ELEMENTS TO DOM\r\n  ========================= */\r\n  render(){\r\n    const { errors } = this.state;\r\n    const { title, description, estimatedTime, materialsNeeded } = this.state;\r\n    \r\n    return (\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Update Course</h1>\r\n\r\n        <Consumer>\r\n          {({user}) => {     \r\n            return (\r\n              <React.Fragment>\r\n                {errors.length > 0 ?    \r\n                  <div>\r\n                    <h2 className=\"validation--errors--label\">Error!</h2>\r\n                      <div className=\"validation-errors\">\r\n                        <ul>\r\n                          {Object.keys(errors).map((key, i) => {\r\n                            return (\r\n                              <li key={key}>{errors[i]}</li>\r\n                            )\r\n                          })}\r\n                        </ul>\r\n                      </div>\r\n                  </div>\r\n                : null\r\n                }\r\n\r\n                <div>\r\n                    <form onSubmit={this.validation.bind(this, user)}>\r\n                    <div className=\"grid-66\">\r\n                      <div className=\"course--header\">\r\n                        <h4 className=\"course--label\">Course</h4>\r\n                        <div>\r\n                          <input id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" placeholder=\"Course title...\" value={`${title}`} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <p>By {user.firstName} {user.lastName}</p>\r\n                      </div>\r\n\r\n                      <div className=\"course--description\">\r\n                        <div>\r\n                          <textarea id=\"description\" name=\"description\" value={description} onChange={this.handleChange} placeholder=\"Course description...\"></textarea>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"grid-25 grid-right\">\r\n                      <div className=\"course--stats\">     \r\n                        <ul className=\"course--stats--list\">\r\n                          <li className=\"course--stats--list--item\">\r\n                            <h4>Estimated Time</h4>\r\n                            <div>\r\n                              <input id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\"\r\n                                placeholder=\"Hours\" value={`${estimatedTime}`} onChange={this.handleChange} />\r\n                            </div>\r\n                          </li>\r\n                          <li className=\"course--stats--list--item\">\r\n                            <h4>Materials Needed</h4>\r\n                            <div>\r\n                              <textarea id=\"materialsNeeded\" name=\"materialsNeeded\" value={materialsNeeded} onChange={this.handleChange} placeholder=\"List materials...\"></textarea>\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"grid-100 pad-bottom\">\r\n                      <button className=\"button\" type=\"submit\">Update Course</button>\r\n                      <button className=\"button button-secondary\" onClick={this.cancelUpdate}>Cancel</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Consumer>\r\n            \r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nUpdateCourse.contextType = AuthContext;\r\nexport default UpdateCourse;\r\n\r\n\r\n","/* SIGN IN COMPONENT\r\n====================\r\n(1) Redirected here if there is an attempt to create or update course\r\n(2) Show validation errors if necessary before signing in user */\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Consumer } from './Context';\r\n\r\n\r\n// Regular expression to check for valid email address\r\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n\r\n\r\nexport default class UserSignIn extends Component {\r\n  \r\n  state = {\r\n    errors: [],\r\n    emailAddress: '',\r\n    password: ''\r\n  }\r\n  \r\n\r\n  // Reset error messages when page loads/reloads\r\n  componentDidMount = () => {\r\n    this.setState( { errors: [] } );\r\n  };\r\n\r\n\r\n   /* USER SIGN IN VALIDATION\r\n  ==========================\r\n  Validate all user inputs before proceeding to POST route*/\r\n\r\n  validation = (e, signIn) => {\r\n    e.preventDefault();\r\n    let errors = [];\r\n    const { emailAddress, password } = this.state;\r\n    \r\n    if (password.length === 0) errors.push('Please enter a password'); \r\n    \r\n    if (emailAddress.length === 0) {\r\n      errors.push('Please enter an email address');\r\n    } else if (!emailRegex.test(emailAddress)){\r\n      errors.push('Please enter a VALID email address');\r\n    };\r\n\r\n    this.setState({ errors });\r\n\r\n    if (errors.length === 0){\r\n      const {emailAddress, password} = this.state;\r\n      signIn({emailAddress, password});\r\n    };\r\n  };\r\n\r\n\r\n  // Assign each state value from input fields\r\n  stateData = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n\r\n  // Cancel sign in\r\n  cancel = (event) => {\r\n    event.preventDefault();\r\n    this.props.history.push(\"/\");\r\n  };\r\n \r\n\r\n  /* RENDER ELEMENTS TO DOM\r\n  ========================= */\r\n  render(){\r\n    const { errors } = this.state;   \r\n    return (\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin\">\r\n          <h1>Sign In</h1>\r\n          \r\n          <Consumer>       \r\n            {({actions, user})  => {  \r\n              return (\r\n                <React.Fragment>\r\n                  {errors.length > 0 ?    \r\n                    <div>\r\n                      <h2 className=\"validation--errors--label\">Error!</h2>\r\n                        <div className=\"validation-errors\">\r\n                          <ul>\r\n                            {Object.keys(errors).map((key, i) => {\r\n                              return (\r\n                                <li key={key}>{errors[i]}</li>\r\n                              )\r\n                            })}\r\n                          </ul>\r\n                        </div>\r\n                    </div>\r\n                  : user.errors.length > 0 ?\r\n                    <div>\r\n                    <h2 className=\"validation--errors--label\">Error!</h2>\r\n                      <div className=\"validation-errors\">\r\n                        <ul>\r\n                          <li>{user.errors}</li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  : null\r\n                  }    \r\n                  <form onSubmit ={e => this.validation(e, actions.signIn)}>\r\n                    <div>\r\n                      <input id=\"emailAddress\" name=\"emailAddress\" type=\"text\" className=\"\" placeholder=\"Email Address\" onChange={this.stateData} />\r\n                    </div>\r\n                    <div>\r\n                      <input id=\"password\" name=\"password\" type=\"password\" className=\"\" placeholder=\"Password\" onChange={this.stateData} />\r\n                    </div>\r\n                    <div className=\"grid-100 pad-bottom\">\r\n                      <button className=\"button\" type=\"submit\">Sign In</button>\r\n                      <button className=\"button button-secondary\" onClick={this.cancel}>Cancel</button>\r\n                    </div>\r\n                  </form>\r\n                </React.Fragment>\r\n              )\r\n            }}\r\n          </Consumer>\r\n          \r\n          <p>Don't have a user account? <NavLink to='/signup'>Click here</NavLink> to sign up!</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n","/* SIGN UP COMPONENT\r\n====================\r\n(1) Create user\r\n(2) Save user to database, global state and localStorage\r\n(3) Automatically sign user in to application*/\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Consumer } from './Context';\r\nimport axios from 'axios';\r\n\r\n// Regular expression to check for valid email address\r\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n\r\n\r\nexport default class UserSignUp extends Component {\r\n\r\n  state= {\r\n    firstName: '',\r\n    lastName: '',\r\n    emailAddress: '',\r\n    password: '',\r\n    errors: []\r\n  };\r\n\r\n\r\n  // Reset errors\r\n  componentDidMount = () => {\r\n    this.setState({ errors: [] })\r\n  }\r\n\r\n\r\n  /* USER SIGN UP VALIDATION\r\n  ==========================\r\n  Validate all user inputs before proceeding to POST route*/\r\n\r\n  validation = (dispatch, event) => {\r\n    event.preventDefault();\r\n    let errors = []\r\n    const { firstName, lastName, emailAddress, password, confirmPassword } = this.state\r\n    \r\n    if (firstName.length === 0) errors.push('Please enter your first name');\r\n    if (lastName.length === 0) errors.push('Please enter your last name');\r\n\r\n    if (emailAddress.length === 0) {\r\n      errors.push('Please enter an email address');\r\n    } else if (!emailRegex.test(emailAddress)){\r\n      errors.push('Please enter a VALID email address');\r\n    };\r\n\r\n    if (password.length === 0){\r\n      errors.push('Please enter a password');\r\n    } else if (password !== confirmPassword){\r\n      errors.push('Passwords do not match');\r\n    };\r\n    \r\n    this.setState({ errors });\r\n\r\n    if (errors.length === 0) this.signup(dispatch);\r\n  };\r\n\r\n\r\n  /* USER POST ROUTE\r\n  ==================\r\n  Save user to database and sign user in to application*/\r\n\r\n  signup = (dispatch) => {\r\n    const { firstName, lastName, emailAddress, password } = this.state;\r\n    const history = this.props.history\r\n    axios.post(`api/users`, { firstName, lastName, emailAddress, password, isSignedIn: true})\r\n      .then(() => {\r\n        axios.get(`api/users`, { auth: { username: emailAddress, password } })\r\n          .then(res => {\r\n            const { ID } = res.data;\r\n            const user = { ID, firstName, lastName, emailAddress, password, signedIn: true };\r\n            localStorage.clear()\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            dispatch({\r\n              type: 'SIGN_IN',\r\n              payload: user\r\n            });\r\n            history.push(\"/\");\r\n          }).catch(err => {\r\n            if (err) history.push('/error')\r\n          });\r\n      }).catch(err => {\r\n        if (err.response.status === 409){\r\n          let errors = [];\r\n          errors.push('An account already exists with that username');\r\n          this.setState({ errors }); \r\n        }else{\r\n          history.push('/error');\r\n        }\r\n      });\r\n  }; \r\n\r\n\r\n  // Assign each state value from input fields\r\n  stateData = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n\r\n  // Cancel form event\r\n  cancel = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n\r\n  /* RENDER ELEMENTS TO DOM\r\n  ========================= */\r\n  render(){\r\n    const { errors } = this.state\r\n    return (\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin\">\r\n          <h1 className=\"append\">Sign Up</h1>\r\n\r\n          <Consumer>\r\n            {({user}) => {\r\n              return (\r\n                <React.Fragment>\r\n                  {errors.length > 0  ?    \r\n                    <div>\r\n                    <h2 className=\"validation--errors--label\">Error!</h2>\r\n                      <div className=\"validation-errors\">\r\n                        <ul>\r\n                        {Object.keys(errors).map((key, i) => {\r\n                          return (\r\n                          <li key={key}>{errors[i]}</li>\r\n                          )\r\n                        })}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  : null\r\n                  }\r\n\r\n                  <form onSubmit = {this.validation.bind(this, user.dispatch)}>\r\n                    <div>\r\n                      <input id=\"firstName\" name=\"firstName\" type=\"text\" placeholder=\"First Name\" onChange={this.stateData}/>\r\n                    </div>\r\n                    <div>\r\n                      <input id=\"lastName\" name=\"lastName\" type=\"text\" placeholder=\"Last Name\" onChange={this.stateData}/>\r\n                    </div>\r\n                    <div>\r\n                      <input id=\"emailAddress\" name=\"emailAddress\" type=\"text\" placeholder=\"Email Address\" onChange={this.stateData}/>\r\n                    </div>\r\n                    <div>\r\n                      <input id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.stateData}/>\r\n                    </div>\r\n                    <div>\r\n                      <input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" onChange={this.stateData}/>\r\n                    </div>\r\n                    <div className=\"grid-100 pad-bottom\">\r\n                      <button className=\"button\" type=\"submit\">Sign Up</button>\r\n                      <button className=\"button button-secondary\" onClick={this.cancel}>Cancel</button>\r\n                    </div>\r\n                  </form>\r\n                  <p>Already have a user account? <NavLink to='/signin'>Click here</NavLink> to sign in!</p>\r\n                </React.Fragment>\r\n              )\r\n            }}\r\n          </Consumer>\r\n\r\n        </div>    \r\n      </div>\r\n    );\r\n  };\r\n};","/* USER SIGN OUT COMPONENT\r\n========================== \r\n(1) Confirm that user wants to sign out\r\n(2) Display error if user is not signed in */\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport { Consumer } from './Context';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserSignOut = () => (\r\n  <div className=\"bounds\">\r\n\r\n   <Consumer>\r\n      {({actions, user}) => (\r\n        <div>\r\n          {user.signedIn ?\r\n            <React.Fragment>\r\n              <h1>Are you sure you want to sign out?</h1>\r\n              <div className=\"pad-bottom\">\r\n                <button className=\"button\" onClick={actions.signOut}>Yes</button>\r\n                <button className=\"button\" onClick={actions.cancelSignOut}>No</button>\r\n              </div>\r\n            </React.Fragment>\r\n          : <div className=\"error\">\r\n              <h1>You're not signed in!</h1>\r\n              <p>Sign up <NavLink to='/signup'>here</NavLink>, or sign in <NavLink to='/signin'>here</NavLink></p>\r\n            </div>\r\n          }\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n\r\n  </div>   \r\n)\r\n\r\nexport default UserSignOut;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst PageNotFound = () => (\r\n  <div className=\"error\">\r\n    <h1>404</h1>\r\n    <h3>Sorry! The page you are trying to reach does not exist</h3>\r\n    &nbsp;\r\n    <p>Go back to course listings <NavLink to='/'>here</NavLink></p>\r\n  </div>\r\n);\r\n\r\nexport default PageNotFound;\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UnhandledError = () => (\r\n  <div className=\"error\">\r\n    <h1>500 - Internal Server Error</h1>\r\n    &nbsp;\r\n    <p>Go back to course listings <NavLink to='/'>here</NavLink></p>\r\n  </div>\r\n);\r\n\r\nexport default UnhandledError;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Forbidden = () => (\r\n  <div className=\"error\">\r\n    <h1>Forbidden</h1>\r\n    <h3>You are not authorized to view the page you requested</h3>\r\n    &nbsp;\r\n    <p>Go back to course listings <NavLink to='/'>here</NavLink></p>\r\n  </div>\r\n);\r\n\r\nexport default Forbidden;\r\n\r\n\r\n","/* HIGHER-ORDER COMPONENT FOR PROTECTED ROUTES\r\n==============================================\r\n(1) Redirect to sign in page if user attempts to create or update course \r\n(2) Using local storage, redirect back to page that user attempted to access \r\n(3) A lot of the logic here is to prevent users from accessing routes by typing the URL in the address bar */\r\n\r\n\r\n\r\nimport React, {useContext} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {AuthContext} from './Context/index';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest}) => { \r\n  const pathname = {...rest.location}.pathname\r\n  const courseID = pathname.slice(9, 33)\r\n  const context = useContext(AuthContext);\r\n  let localUser = null;\r\n  let newPath = '';\r\n\r\n  localStorage.setItem('location', JSON.stringify(pathname))\r\n  \r\n  if(localStorage.getItem('user')){\r\n    const { signedIn } = JSON.parse(localStorage.getItem('user'));\r\n    localUser = signedIn;\r\n  }; \r\n\r\n  if (!context.user.signedIn && !localUser){\r\n    if (pathname === '/courses/create') newPath = '/signin';\r\n    if (pathname === `/courses/${courseID}/update`) newPath = '/forbidden';\r\n  }else{\r\n    if (pathname === '/courses/create') newPath = '/courses/create';\r\n    if (pathname === `/courses/${courseID}/update`) newPath = `/courses/${courseID}/update`;\r\n  };\r\n\r\n  if (newPath.length === 0) newPath = '/notfound'\r\n  \r\n  return <Route {...rest} render = {props => (\r\n    context.user.signedIn\r\n      ? <Component {...props} />\r\n      : <Redirect to = {newPath} />\r\n  )} />\r\n}\r\n\r\nexport default PrivateRoute;\r\n\r\n","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport Provider from './Components/Context';\nimport Header from './Components/Header';\nimport Courses from './Components/Courses';\nimport CreateCourse from './Components/CreateCourse';\nimport CourseDetail from './Components/CourseDetail';\nimport UpdateCourse from './Components/UpdateCourse';\nimport UserSignIn from './Components/UserSignIn';\nimport UserSignUp from './Components/UserSignUp';\nimport UserSignOut from './Components/UserSignOut';\nimport PageNotFound from './Components/Errors/PageNotFound';\nimport ErrorRoute from './Components/Errors/ErrorRoute';\nimport Forbidden from './Components/Errors/Forbidden';\nimport PrivateRoute from './Components/PrivateRoute';\n\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Provider>\n            <Header />\n            <Switch>\n              <Route exact path='/courses' render={() =>  <Redirect to='/' />}/>   \n              <Route exact path='/' component={Courses} />\n              <PrivateRoute exact path='/courses/create' component={CreateCourse} />\n              <Route exact path='/courses/:id' component={CourseDetail} />\n              <PrivateRoute exact path='/courses/:id/update' component={UpdateCourse} />\n              <Route path='/signin' component={UserSignIn} />\n              <Route exact path='/signup' component={UserSignUp} />\n              <Route path='/signout' component={UserSignOut} />\n              <Route path='/forbidden' component={Forbidden} />\n              <Route path='/error' component={ErrorRoute} />\n              <Route component = {PageNotFound} />\n            </Switch>\n        </Provider>\n      </BrowserRouter>\n    );\n  };\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}